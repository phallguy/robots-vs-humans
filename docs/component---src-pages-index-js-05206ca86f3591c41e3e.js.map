{"version":3,"sources":["webpack:///./src/components/Pawn/Pawn.jsx","webpack:///./src/components/Board/Board.jsx","webpack:///./src/lib/Game.js","webpack:///./src/components/AllowedMoves/AllowedMoves.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Move","_ref","pawn","x","direction","attack","size","onClick","other","_objectWithoutPropertiesLoose","pawnX","heading","react_default","a","createElement","Object","assign","className","Pawn","_ref2","allowed","onAllowed","Fragment","type","map","move","Pawn_Move","key","id","title","renderAllowed","defaultProps","Board","board","allowedMoves","mapY","y","mapX","pawnAt","components_Pawn_Pawn","renderPawn","uniqueId","status","this","moveTo","die","getRandomInt","min","max","Math","ceil","floor","random","_ref3","pawns","turn","parent","weight","Array","from","forEach","_","push","generatePawns","moves","_proto2","prototype","_ref4","find","p","callback","isGameOver","candidateMoves","_this","nextY","canAttack","_ref5","targetPawn","playMove","nextPawns","nextTurn","_this2","gameOver","length","guessMove","guessOptimalMove","guess","m","learn","winner","promoteMove","demoteMove","stealFrom","indexOf","giveTo","Game","_ref6","current","generate","AllowedMoves","toFixed","game","IndexPage","_useState","useState","setBoard","_useState2","boards","setBoards","_useState3","autoPlay","setAutoPlay","_useState4","optimal","setOptimal","_useState5","games","setGames","_useState6","black","white","wins","setWins","_useState7","setWinner","makeMove","useCallback","nextBoard","concat","_toConsumableArray","play","reset","useEffect","toggleAutoPlay","layout","onChange","e","target","checked","objectCount","components_Board_Board","components_AllowedMoves_AllowedMoves","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","json","propTypes","PropTypes","shape","pathname","string","isRequired","createContext","object","func","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","color","textDecoration","to","Layout","children","data","_856328897","header","site","siteMetadata","paddingTop","node"],"mappings":"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","file":"component---src-pages-index-js-05206ca86f3591c41e3e.js","sourcesContent":["import React from \"react\"\n\nimport \"./styles.css\"\n\nfunction renderAllowed(pawn, allowed, onAllowed) {\n  return allowed.map(move => {\n    if (move.pawn !== pawn) return null\n\n    return (\n      <Move\n        key={move.id}\n        title={move.id}\n        {...move}\n        onClick={onAllowed && (() => onAllowed(move))}\n      />\n    )\n  })\n}\n\nconst Move = ({ pawn, x, direction, attack, size, onClick, ...other }) => {\n  const { x: pawnX } = pawn\n  // eslint-disable-next-line\n  const heading = pawnX === x ? \"down\" : pawnX < x ? \"right\" : \"left\"\n\n  return (\n    <span\n      {...other}\n      className={`move move-size-${size} heading-${heading} direction-${\n        direction > 0 ? \"down\" : \"up\"\n      } attack-${!!attack}`}\n      onClick={onClick}\n    />\n  )\n}\n\nconst Pawn = ({ pawn, allowed, size, onAllowed }) => (\n  <>\n    <div className={`pawn pawn-size-${size} pawn-${pawn.type}`} />\n    {allowed && size === \"default\" && renderAllowed(pawn, allowed, onAllowed)}\n  </>\n)\n\nPawn.defaultProps = {\n  size: \"default\",\n}\n\nexport default Pawn\n","import React from \"react\"\n\nimport Pawn from \"../Pawn\"\n\nimport \"./styles.css\"\n\nfunction renderPawn({ board, allowed, x, y, size, onAllowed }) {\n  const pawn = board.pawnAt({ x, y })\n\n  if (!pawn) return null\n\n  return (\n    <Pawn key={pawn.id} pawn={pawn} allowed={allowed} size={size} onAllowed={onAllowed} />\n  )\n}\n\nconst Board = ({ board, size, onAllowed }) => {\n  const allowed = board.allowedMoves()\n\n  return (\n    <table className={`board board-size-${size}`}>\n      <tbody>\n        {board.mapY(y => (\n          <tr key={y}>\n            {board.mapX(x => (\n              <td key={x}>{renderPawn({ board, allowed, x, y, size, onAllowed })}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nBoard.defaultProps = {\n  size: \"default\"\n}\n\nexport default Board\n","export let id = 1\nfunction uniqueId() {\n  // eslint-disable-next-line\n  return id++\n}\n\nclass Pawn {\n  constructor({ x, y, status, type }) {\n    this.x = x\n    this.y = y\n    this.status = status || \"alive\"\n    this.type = type\n    this.id = uniqueId()\n  }\n\n  moveTo({ x, y }) {\n    return new Pawn({\n      type: this.type,\n      status: this.status,\n      x,\n      y,\n    })\n  }\n\n  die() {\n    return new Pawn({\n      type: this.type,\n      status: \"dead\",\n      x: null,\n      y: null,\n    })\n  }\n}\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nfunction generatePawns(size) {\n  const pawns = []\n\n  Array.from(Array(size)).forEach((_, x) => {\n    pawns.push(new Pawn({ x, y: size - 1, type: \"white\" }))\n    pawns.push(new Pawn({ x, y: 0, type: \"black\" }))\n  })\n\n  return pawns\n}\n\nexport class Board {\n  constructor({ size, pawns, turn, parent, move, weight }) {\n    this.size = size\n    this.weight = weight || 3\n    this.turn = turn || \"white\"\n    this.pawns = pawns || generatePawns(size)\n    this.move = move\n    this.moves = {}\n    this.parent = parent\n    this.id = uniqueId()\n  }\n\n  pawnAt({ x, y }) {\n    return this.pawns.find(p => p.x === x && p.y === y)\n  }\n\n  mapY(callback) {\n    return Array.from(Array(this.size)).map((_, y) => callback(y))\n  }\n\n  mapX(callback) {\n    return Array.from(Array(this.size)).map((_, x) => callback(x))\n  }\n\n  allowedMoves() {\n    return this.isGameOver() ? [] : this.candidateMoves()\n  }\n\n  candidateMoves() {\n    const direction = this.turn === \"black\" ? 1 : -1\n    const allowed = []\n\n    this.pawns.forEach(pawn => {\n      const { type, x, y, status } = pawn\n      const nextY = y + direction\n\n      if (status !== \"alive\") return\n      if (type !== this.turn) return\n\n      if (this.canAttack({ pawn, x: x - 1, y: nextY })) {\n        allowed.push({\n          pawn,\n          x: x - 1,\n          y: nextY,\n          direction,\n          attack: true,\n          id: uniqueId(),\n        })\n      }\n\n      if (this.canAttack({ pawn, x: x + 1, y: nextY })) {\n        allowed.push({\n          pawn,\n          x: x + 1,\n          y: nextY,\n          direction,\n          attack: true,\n          id: uniqueId(),\n        })\n      }\n\n      if (nextY >= 0 && nextY < this.size && !this.pawnAt({ x, y: nextY })) {\n        allowed.push({\n          pawn,\n          x,\n          y: nextY,\n          direction,\n          id: uniqueId(),\n        })\n      }\n    })\n\n    const weight = this.weight\n    // eslint-disable-next-line\n    allowed.forEach(move => {\n      move.id = uniqueId()\n      move.weight = weight\n    })\n\n    // Memoize\n    this.candidateMoves = () => allowed\n\n    return allowed\n  }\n\n  canAttack({ pawn, x, y }) {\n    const targetPawn = this.pawnAt({ x, y })\n\n    if (!targetPawn) return false\n    if (targetPawn.type === pawn.type) return false\n\n    return true\n  }\n\n  playMove(move) {\n    if(!move) return\n\n    let board = this.moves[move.id]\n    if (board) return board\n\n    const { pawn, x, y } = move\n    const nextPawns = this.pawns.map(p => {\n      if (p === pawn) {\n        return p.moveTo({ x, y })\n      }\n\n      if (p.x === x && p.y === y) {\n        return p.die()\n      }\n\n      return p\n    })\n\n    board = new Board({\n      turn: this.nextTurn(),\n      size: this.size,\n      pawns: nextPawns,\n      parent: this,\n      weight: this.weight,\n      move,\n    })\n\n    this.moves[move.id] = board\n    return board\n  }\n\n  nextTurn() {\n    return this.turn === \"black\" ? \"white\" : \"black\"\n  }\n\n  isGameOver() {\n    let gameOver = false\n\n    gameOver =\n      gameOver ||\n      this.pawns.find(\n        p => p.type === \"black\" && p.status === \"alive\" && p.y === this.size - 1\n      )\n    gameOver =\n      gameOver ||\n      this.pawns.find(\n        p => p.type === \"white\" && p.status === \"alive\" && p.y === 0\n      )\n    gameOver = gameOver || this.candidateMoves().length === 0\n\n    // Memoize\n    this.isGameOver = () => gameOver\n    return gameOver\n  }\n\n  guessMove() {\n    const allowed = this.allowedMoves()\n    if (!allowed.length) return null\n\n    const guess = getRandomInt(0, allowed.length - 1)\n    return allowed[guess]\n  }\n\n  guessOptimalMove() {\n    const allowed = this.allowedMoves()\n    if (!allowed.length) return null\n\n    let guess = getRandomInt(0, allowed.length * this.weight - 1)\n    let move = null\n    allowed.forEach( m => {\n      if(move) return\n\n      if(guess > m.weight) {\n        guess -= m.weight\n      } else {\n        move = m\n      }\n    })\n\n    return move\n  }\n\n  learn(move, winner) {\n    if (!move) {\n      this.parent.learn(this.move, this.nextTurn())\n      return\n    }\n\n    if (this.turn === winner) this.promoteMove(move)\n    else this.demoteMove(move)\n\n    if (this.parent) this.parent.learn(this.move, winner)\n  }\n\n  promoteMove(move) {\n    const allowed = this.allowedMoves()\n    const index = allowed.indexOf(move)\n\n    let stealFrom = (index + 1) % allowed.length\n    while (allowed[stealFrom].weight === 0) {\n      stealFrom = (stealFrom + 1) % allowed.length\n    }\n\n    move.weight += 1\n    allowed[stealFrom].weight -= 1\n  }\n\n  demoteMove(move) {\n    if (move.weight === 0) return\n\n    const allowed = this.allowedMoves()\n    const index = allowed.indexOf(move)\n\n    let giveTo = (index - 1 + allowed.length) % allowed.length\n\n    move.weight -= 1\n    allowed[giveTo].weight += 1\n  }\n}\n\nexport default class Game {\n  constructor({ size, weight }) {\n    this.current = new Board({ size, weight })\n  }\n\n  generate() {\n    const { current } = this\n    const allowed = current.allowedMoves()\n\n    return allowed.map(move => current.move(move))\n  }\n}\n","import React from \"react\"\n\nimport \"./styles.css\"\n\nconst AllowedMoves = ({ allowed }) => {\n  return (\n    <table className=\"allowedMoves\">\n      <tbody>\n        <tr>\n          <td>{allowed.length}: </td>\n          {allowed.map(move => (\n            <td key={move.id}>{move.weight.toFixed(2)}</td>\n          ))}\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nexport default AllowedMoves\n","import React, { useState, useCallback, useEffect } from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Board from \"../components/Board\"\nimport Game, { id as objectCount } from \"../lib/Game\"\nimport AllowedMoves from \"../components/AllowedMoves\"\n\nconst game = new Game({ size: 3, weight: 5 })\n\nconst IndexPage = () => {\n  const [board, setBoard] = useState(game.current)\n  const [boards, setBoards] = useState([])\n  const [autoPlay, setAutoPlay] = useState(false)\n  const [optimal, setOptimal] = useState(true)\n  const [games, setGames] = useState(0)\n  const [wins, setWins] = useState({ black: 0, white: 0 })\n  const [winner, setWinner] = useState()\n\n  const makeMove = useCallback(\n    move => {\n      if (!board.isGameOver()) {\n        const nextBoard = board.playMove(move)\n        setBoard(nextBoard)\n        setBoards([board, ...boards])\n        if (nextBoard.isGameOver()) {\n          setGames(games + 1)\n          setWins({\n            black: board.turn === \"black\" ? wins.black + 1 : wins.black,\n            white: board.turn === \"white\" ? wins.white + 1 : wins.white,\n          })\n          setWinner(board.turn)\n\n          nextBoard.learn()\n        }\n      }\n    },\n    [board]\n  )\n\n  const play = useCallback(() => {\n    if (board.isGameOver()) reset()\n    else makeMove(board[optimal ? \"guessOptimalMove\" : \"guessMove\"]())\n  }, [board])\n\n  const reset = useCallback(() => {\n    setBoard(game.current)\n    setBoards([])\n  })\n\n  useEffect(() => {\n    if (autoPlay) play()\n  })\n\n  const toggleAutoPlay = useCallback(() => setAutoPlay(!autoPlay), [autoPlay])\n\n  return (\n    <Layout>\n      <div>\n        <button type=\"button\" onClick={reset}>\n          Reset\n        </button>\n        <button type=\"button\" onClick={play}>\n          Play\n        </button>\n        <button type=\"button\" onClick={toggleAutoPlay}>\n          Auto Play\n        </button>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={e => setOptimal(e.target.checked)}\n            checked={optimal}\n          />\n          optimal\n        </label>{\" \"}\n        objects:\n        {objectCount}\n      </div>\n      <div>\n        Games played {games} Black: {wins.black} (\n        {(wins.black / games).toFixed(2) * 100}%) White: {wins.white} (\n        {(wins.white / games).toFixed(2) * 100}%)\n      </div>\n      <div>Last winner: {winner}</div>\n      <br />\n      <div>\n        <Board board={board} onAllowed={makeMove} size=\"default\" />\n        <AllowedMoves allowed={board.allowedMoves()} />\n      </div>\n      <div>\n        {false &&\n          boards.map(board => (\n            <div key={board}>\n              <Board board={board} />\n              <AllowedMoves allowed={board.allowedMoves()} />\n            </div>\n          ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: \"rebeccapurple\",\n      marginBottom: \"1.45rem\",\n    }}\n  >\n    <div\n      style={{\n        margin: \"0 auto\",\n        maxWidth: 960,\n        padding: \"1.45rem 1.0875rem\",\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          style={{\n            color: \"white\",\n            textDecoration: \"none\",\n          }}\n          to=\"/\"\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: \"\",\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: 960,\n          padding: \"0px 1.0875rem 1.45rem\",\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}